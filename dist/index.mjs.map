{"version":3,"sources":["../src/components/Button/Button.tsx","../src/components/Checkbox%20/Checkbox.tsx","../src/components/Input/Input.tsx","../src/components/Tooltip/Tooltip.tsx"],"names":["jsx"],"mappings":";;;AAYO,IAAM,SAAgC,CAAC;AAAA,EAC5C,OAAA;AAAA,EACA,QAAA;AAAA,EACA,eAAA;AAAA,EACA,KAAA;AAAA,EACA;AACF,CAAM,KAAA;AACJ,EACE,uBAAA,GAAA;AAAA,IAAC,QAAA;AAAA,IAAA;AAAA,MACC,UAAU,OAAY,KAAA,UAAA;AAAA,MACtB,SAAW,EAAA,CAAA,mCAAA,EACT,OAAY,KAAA,UAAA,GAAa,eAAe,qBAC1C,CAAA,CAAA;AAAA,MACA,OACE,eACI,GAAA,EAAE,iBAAkC,KAAc,EAAA,MAAA,KAClD,EAAC;AAAA,MAGN;AAAA;AAAA,GACH;AAEJ;AC5BO,IAAM,QAAoC,GAAA,CAAC,EAAE,OAAA,EAAS,UAAe,KAAA;AAC1E,EAAA,uBACEA,GAAAA;AAAA,IAAC,OAAA;AAAA,IAAA;AAAA,MACC,IAAK,EAAA,UAAA;AAAA,MACL,OAAA;AAAA,MACA,UAAU,CAAC,CAAA,KAAM,QAAS,CAAA,CAAA,CAAE,OAAO,OAAO;AAAA;AAAA,GAC5C;AAEJ;ACJO,IAAM,QAA8B,CAAC;AAAA,EAC1C,IAAA;AAAA,EACA,WAAA;AAAA,EACA;AACF,CAAM,KAAA;AACJ,EAAA,uBACEA,GAAAA;AAAA,IAAC,OAAA;AAAA,IAAA;AAAA,MACC,IAAA;AAAA,MACA,WAAA;AAAA,MACA,SAAU,EAAA,6CAAA;AAAA,MACV,UAAU,OAAY,KAAA;AAAA;AAAA,GACvB;AAEL;ACbO,IAAM,UAAkC,CAAC;AAAA,EAC9C,QAAA;AAAA,EACA,OAAA;AAAA,EACA,eAAA;AAAA,EACA,KAAA;AAAA,EACA;AACF,CAAM,KAAA;AACJ,EAAA,uBACEA,GAAAA;AAAA,IAAC,MAAA;AAAA,IAAA;AAAA,MACC,SAAW,EAAA,CAAA,mCAAA,EACT,OAAY,KAAA,UAAA,GACR,2BACA,qBACN,CAAA,CAAA;AAAA,MACA,OACE,eACI,GAAA,EAAE,iBAAkC,KAAc,EAAA,MAAA,KAClD,EAAC;AAAA,MAGN;AAAA;AAAA,GACH;AAEJ","file":"index.mjs","sourcesContent":["import React from 'react';\n\ninterface ButtonProps {\n  variant?: 'default' | 'outlined' | 'disabled';\n  backgroundColor?: string;\n  width?: string;\n  height?: string;\n  disabled: boolean;\n  onClick?: () => void;\n  children: React.ReactNode;\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  variant,\n  children,\n  backgroundColor,\n  width,\n  height,\n}) => {\n  return (\n    <button\n      disabled={variant === 'disabled'}\n      className={`px-4 py-2 rounded-lg font-semibold ${\n        variant !== 'outlined' ? 'text-white' : 'text-black border-2'\n      }`}\n      style={\n        backgroundColor\n          ? { backgroundColor: backgroundColor, width: width, height: height }\n          : {}\n      }\n    >\n      {children}\n    </button>\n  );\n};\n","interface CheckboxProps {\n  checked: boolean;\n  onChange: (checked: boolean) => void;\n  disabled: boolean;\n}\n\nexport const Checkbox: React.FC<CheckboxProps> = ({ checked, onChange }) => {\n  return (\n    <input\n      type=\"checkbox\"\n      checked={checked}\n      onChange={(e) => onChange(e.target.checked)}\n    />\n  );\n};\n","interface InputProps {\n  variant?: 'default' | 'outlined' | 'disabled';\n  backgroundColor?: string;\n  type?: string;\n  width?: string;\n  height?: string;\n  disabled: boolean;\n  placeholder?: string;\n}\n\nexport const Input: React.FC<InputProps> = ({\n  type,\n  placeholder,\n  variant,\n}) => {\n  return (\n    <input\n      type={type}\n      placeholder={placeholder}\n      className=\"px-4 py-2 rounded-lg font-semibold border-2\"\n      disabled={variant === 'disabled'}\n    ></input>\n  );\n};\n","import React from 'react';\n\ninterface TooltipProps {\n  variant: 'default' | 'outlined';\n  backgroundColor?: string;\n  width?: string;\n  height?: string;\n  children: React.ReactNode;\n}\n\nexport const Tooltip: React.FC<TooltipProps> = ({\n  children,\n  variant,\n  backgroundColor,\n  width,\n  height,\n}) => {\n  return (\n    <span\n      className={`px-4 py-2 rounded-lg font-semibold ${\n        variant !== 'outlined'\n          ? 'text-white border-none'\n          : 'text-black border-2'\n      }`}\n      style={\n        backgroundColor\n          ? { backgroundColor: backgroundColor, width: width, height: height }\n          : {}\n      }\n    >\n      {children}\n    </span>\n  );\n};\n"]}